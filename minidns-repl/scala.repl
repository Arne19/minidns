org.minidns.minidnsrepl.MiniDnsRepl.init()

import org.minidns._
import org.minidns.dnsmessage._
import org.minidns.record.Record.TYPE
import org.minidns.record._

import org.minidns.dnssec.DnssecClient

import org.minidns.minidnsrepl.MiniDnsRepl.clearCache
import org.minidns.minidnsrepl.MiniDnsRepl.writeToFile

import org.minidns.minidnsrepl.MiniDnsStats._

import org.minidns.jul.MiniDnsJul._

import java.net.InetAddress

import java.util.logging._

def debugLog() = {
  val miniDnsLogger = Logger.getLogger("org.minidns")
  miniDnsLogger.setLevel(Level.FINE)
  val consoleHandler = new ConsoleHandler()
  consoleHandler.setLevel(Level.FINE)
  miniDnsLogger.addHandler(consoleHandler)
}

// Some standard values
Predef.println("Set value 'c' to DNSClient")
val c = org.minidns.minidnsrepl.MiniDnsRepl.DNSCLIENT
Predef.println("Set value 'ic' to IterativeDnsClient")
val ic = org.minidns.minidnsrepl.MiniDnsRepl.ITERATIVEDNSCLIENT
Predef.println("Set value 'dc' to DnssecClient")
val dc = org.minidns.minidnsrepl.MiniDnsRepl.DNSSECCLIENT
// A normal resolver
Predef.println("Set value 'r' to ResolverApi")
val r = org.minidns.hla.ResolverApi.INSTANCE
// A DNSSEC resolver
Predef.println("Set value 'dr' to DnssecResolverApi")
val dr = org.minidns.hla.DnssecResolverApi.INSTANCE

Predef.println("Enjoy MiniDNS. Go ahead and try a query. For example:")
Predef.println("c query (\"geekplace.eu\", TYPE.A)")
Predef.println("dr resolveDnssecReliable (\"verteiltesysteme.net\", classOf[A])")
Predef.println("NOTE: You can enable debug log output by calling 'debugLog'")

